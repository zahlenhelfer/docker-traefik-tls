services:
  traefik:
    image: traefik:v3.4
    command:
      - --api.insecure=true # Enable Traefik dashboard
      - --providers.docker=true # Enable Docker provider
      - --entrypoints.web.address=:80 # HTTP entrypoint
      - --entrypoints.websecure.address=:443 # HTTPS entrypoint
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true # Enable DNS challenge for Let's Encrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=digitalocean # DNS provider
      - --certificatesresolvers.letsencrypt.acme.email=<EMAIL> # your email for Let's Encrypt notifications
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json # certificate storage
      #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory # staging server
    environment:
      - DO_AUTH_TOKEN=${DO_AUTH_TOKEN} # .env file with your DigitalOcean API token
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Docker socket for Traefik to monitor containers
      - ../config/traefik/acme.json:/letsencrypt/acme.json # Volume for Let's Encrypt certificates
    restart: unless-stopped

  frontend-nginx:
    image: nginx:alpine
    container_name: frontend # Nginx for frontend
    volumes:
      - ../config/nginx/frontend.conf:/etc/nginx/conf.d/default.conf # Nginx configuration for frontend
    labels:
      - "traefik.enable=true" # Enable Traefik for this service
      - "traefik.http.routers.frontend.rule=HostRegexp(`([a-zA-Z]+.)?subdomain.domain.com`)" # Use this line for subdomains
      - "traefik.http.routers.frontend.entrypoints=websecure" # Use HTTPS entrypoint
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt" # Use Let's Encrypt for TLS
      - "traefik.http.services.frontend.loadbalancer.server.port=8080" # Port where the frontend service listens
    restart: unless-stopped

  api-nginx:
    image: nginx:alpine
    container_name: api
    volumes:
      - ../config/nginx/api.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.api.rule=Host(`subdomain.domain.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
    restart: unless-stopped